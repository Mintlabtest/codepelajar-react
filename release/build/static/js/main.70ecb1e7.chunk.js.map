{"version":3,"sources":["libraries/index.js","components/atoms/Section/index.js","components/atoms/Container/index.js","components/atoms/View/index.js","components/atoms/Text/index.js","components/atoms/Anchor/index.js","components/atoms/Image/index.js","components/atoms/Skeleton/index.js","components/atoms/Button/index.js","components/molecules/PostAuthorMeta/index.js","utils/index.js","components/molecules/PostLabel/index.js","components/molecules/PostCard/index.js","config/api/config.js","config/api/url.js","config/api/index.js","services/index.js","components/organisms/FeatureBlock/index.js","components/organisms/PostBlock/index.js","containers/FeaturePost/index.js","containers/PostContainer/index.js","elements/index.js","serviceWorker.js","index.js"],"names":["Section","className","style","children","props","Container","View","Text","tag","Tag","Anchor","href","title","target","defaultProps","Image","source","width","height","resizeMode","backgroundImage","alt","imageStyleObj","backgroundSize","src","Skeleton","Button","onPress","anchor","variant","outline","block","radius","small","large","disabled","btnClass","cx","onClick","type","PostAuthorMeta","data","image","name","elementId","document","getElementById","isLocalhost","window","location","origin","indexOf","mapFeedToFeatureData","obj","_","get","resized","crop","result","replace","resizeImage","description","url","link","length","createSearchUrl","value","createAuthor","id","PostLabel","isEmpty","isArray","map","label","index","key","PostCard","author","apiInstance","axios","create","baseURL","timeout","validateStatus","status","ApiRequest","route","token","payload","request","params","paramsResult","Object","keys","e","push","join","method","Promise","resolve","reject","path","resolveParams","customUrl","baseHeaders","headers","body","then","res","catch","err","response","production","api","feed","asset","google","apiKey","blogId","config","baseUrl","summary","postFeed","post","page","API","blogPost","blogSummary","blogPostFeed","blogPage","isSuccess","sendError","error","message","Error","postConfig","option","maxResults","orderBy","fetchBodies","fetchImages","featurePostConfig","callFeaturedPost","sendPayload","console","log","callPosts","dummy","FeatureBlock","initDummy","setState","isLoading","setTimeout","isLoaded","init","a","renderSkeleton","Fragment","paddingBottom","marginBottom","state","this","React","PureComponent","nextToken","posts","pageToken","padding","display","alignItems","paddingLeft","paddingRight","borderRadius","marginRight","prevProps","prevState","labels","FeaturePost","paddingTop","Component","PostContainer","PostBlock","elements","HOME_FEATURED_POST","HOME_POST_CONTAINER","Boolean","hostname","match","component","element","forEach","app","el","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70ecb1e7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport axios from 'axios';\nimport className from 'classnames';\n\nexport { React, PropTypes, moment, axios, className as cx };\n\nexport * from 'react';\n","import { React, PropTypes } from 'libraries';\n\nconst Section = ({ className, style, children, ...props }) => (\n  <section className={className} style={style} {...props}>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n  style: PropTypes.any\n};\n\nexport default Section;\n","import { React, PropTypes } from 'libraries';\n\nconst Container = ({ className, style, children, ...props }) => (\n  <div className={`container ${className || ''}`} style={style} {...props}>\n    {children}\n  </div>\n);\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n  style: PropTypes.any\n};\n\nexport default Container;\n","import { React, PropTypes } from 'libraries';\n\nconst View = ({ className, style, children, ...props }) => (\n  <div className={className} style={style} {...props}>\n    {children}\n  </div>\n);\n\nView.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n  style: PropTypes.any\n};\n\nexport default View;\n","import { React, PropTypes } from 'libraries';\n\nconst Text = ({ className, style, children, tag, ...props }) => {\n  const Tag = tag || 'p';\n  return (\n    <Tag className={className} style={style} {...props}>\n      {children}\n    </Tag>\n  );\n};\n\nText.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n  style: PropTypes.any,\n  tag: PropTypes.string\n};\n\nexport default Text;\n","import { React, PropTypes } from 'libraries';\n\nconst Anchor = ({\n  href,\n  title,\n  target,\n  children,\n  className,\n  style,\n  ...props\n}) => (\n  <a\n    href={href}\n    title={title}\n    target={target}\n    {...props}\n    className={className}\n    style={style}\n  >\n    {children}\n  </a>\n);\n\nAnchor.propTypes = {\n  href: PropTypes.string,\n  title: PropTypes.string,\n  target: PropTypes.string,\n  children: PropTypes.any,\n  className: PropTypes.any,\n  style: PropTypes.any\n};\n\nAnchor.defaultProps = {\n  href: '#'\n};\n\nexport default Anchor;\n","import { React, PropTypes } from 'libraries';\n\nconst Image = ({\n  source,\n  width,\n  height,\n  resizeMode,\n  backgroundImage,\n  title,\n  alt,\n  className,\n  style,\n  children,\n  ...props\n}) => {\n  if (backgroundImage) {\n    const imageStyleObj = { backgroundImage: `url(${source})` };\n    return (\n      <div\n        title={title}\n        alt={alt}\n        className={className}\n        style={{\n          ...imageStyleObj,\n          ...(width && width),\n          ...(height && height),\n          ...(resizeMode && { backgroundSize: resizeMode }),\n          ...style\n        }}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={source}\n      alt={alt}\n      title={title}\n      className={className}\n      style={style}\n      width={width}\n      height={height}\n      {...props}\n    />\n  );\n};\n\nImage.propTypes = {\n  source: PropTypes.any,\n  width: PropTypes.any,\n  height: PropTypes.any,\n  resizeMode: PropTypes.string,\n  backgroundImage: PropTypes.bool,\n  title: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.any,\n  children: PropTypes.any\n};\n\nImage.defaultProps = {\n  backgroundImage: false,\n  alt: 'image',\n  title: 'image'\n};\n\nexport default Image;\n","import { React, PropTypes } from 'libraries';\n\nconst Skeleton = ({ style, className, children, ...props }) => (\n  <div style={style} className={`a-skeleton ${className || ''}`} {...props}>\n    {children}\n  </div>\n);\n\nSkeleton.propTypes = {\n  style: PropTypes.any,\n  className: PropTypes.string,\n  children: PropTypes.any\n};\n\nexport default Skeleton;\n","import { React, PropTypes, cx } from 'libraries';\nimport Anchor from '../Anchor';\n\nconst Button = ({\n  onPress,\n  className,\n  style,\n  anchor,\n  href,\n  title,\n  children,\n  target,\n  variant,\n  outline,\n  block,\n  radius,\n  small,\n  large,\n  disabled,\n  ...props\n}) => {\n  const btnClass = cx('a-button__element', className, {\n    [`a-button__element--${variant}`]: variant,\n    'a-button__element--outline': outline,\n    'a-button__element--block': block,\n    'a-button__element--radius': radius,\n    'a-button__element--small': small,\n    'a-button__element--large': large,\n    'a-button__element--disabled': disabled\n  });\n  if (anchor)\n    return (\n      <Anchor\n        // eslint-disable-next-line no-script-url\n        href={disabled ? 'javascript:void(0)' : href}\n        title={title}\n        style={style}\n        className={btnClass}\n        onClick={onPress}\n        target={target}\n        {...props}\n      >\n        {children}\n      </Anchor>\n    );\n\n  return (\n    <button\n      disabled={disabled}\n      type=\"button\"\n      className={btnClass}\n      onClick={onPress}\n      {...props}\n      style={style}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onPress: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.any,\n  anchor: PropTypes.bool,\n  target: PropTypes.string,\n  children: PropTypes.any,\n  title: PropTypes.string,\n  href: PropTypes.string,\n  outline: PropTypes.bool,\n  block: PropTypes.bool,\n  radius: PropTypes.bool,\n  small: PropTypes.bool,\n  large: PropTypes.bool,\n  variant: PropTypes.oneOf([\n    'default',\n    'success',\n    'info',\n    'warning',\n    'secondary',\n    'primary'\n  ]),\n  disabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n  anchor: false,\n  variant: 'default'\n};\n\nexport default Button;\n","import { React, PropTypes } from 'libraries';\nimport { View, Text, Image } from 'components/atoms';\n\nconst PostAuthorMeta = ({ data }) => (\n  <View className=\"m-author-meta__wrapper\">\n    <Image\n      className=\"m-author-meta__image\"\n      source={data.image}\n      title={data.name}\n      alt={data.name}\n    />\n    <Text tag=\"span\" className=\"m-author-meta__title\">\n      {data.name}\n    </Text>\n  </View>\n);\n\nPostAuthorMeta.propTypes = {\n  data: PropTypes.object\n};\n\nexport default PostAuthorMeta;\n","/* eslint-disable no-useless-escape */\nimport _ from 'lodash';\nimport dummyFeaturePost from './featuredPost';\n\nexport const elementId = name => document.getElementById(name);\nexport const isLocalhost = window.location.origin.indexOf('localhost') !== -1;\n\nexport const resizeImage = (image, width = 400, height = 400, crop = true) => {\n  const target = /\\/s[0-9]+\\-c/g;\n  const result = `/w${width}-h${height}-${crop ? 'c' : ''}`;\n  return image.replace(target, result);\n};\n\n// MAPING DATA FROM RESPONSE FEED;\nexport const mapFeedToFeatureData = obj => {\n  const data = _.get(obj, 'feed.entry[0]', null);\n\n  if (!data) return data;\n\n  const image = _.get(data, 'media$thumbnail.url', '');\n  const resized = resizeImage(image, 640, 480);\n  return {\n    title: _.get(data, 'title.$t', ''),\n    description: _.get(data, 'summary.$t', ''),\n    image: resized,\n    url: _.get(data, `link[${data.link.length - 1}].href`, '')\n  };\n};\n\nexport const createSearchUrl = (value = '') => `/search/label/${value}`;\nexport const createAuthor = (obj = {}) => {\n  const image = _.get(obj, 'image.url', '');\n  const name = _.get(obj, 'displayName', '');\n  const id = _.get(obj, 'id', '');\n  return {\n    id,\n    name,\n    image\n  };\n};\n\nexport { dummyFeaturePost };\n","import _ from 'lodash';\nimport { React, PropTypes } from 'libraries';\nimport { View, Anchor } from 'components/atoms';\nimport { createSearchUrl } from 'utils';\n\nconst PostLabel = ({ data }) => {\n  if (data && !_.isEmpty(data) && _.isArray(data)) {\n    return (\n      <View className=\"m-post-label__wrapper\">\n        {data.map((label, index) => {\n          if (index === 0) {\n            return (\n              <Anchor\n                href={createSearchUrl(label)}\n                key={index}\n                className=\"m-post-label__item\"\n              >\n                {label}\n              </Anchor>\n            );\n          }\n          return null;\n        })}\n      </View>\n    );\n  }\n  return null;\n};\n\nPostLabel.propTypes = {\n  data: PropTypes.array\n};\n\nexport default PostLabel;\n","import { React, PropTypes } from 'libraries';\nimport { Text, View, Image, Anchor } from 'components/atoms';\nimport PostAuthorMeta from '../PostAuthorMeta';\nimport PostLabel from '../PostLabel';\n\nconst PostCard = ({ title, author, image, url, label }) => (\n  <View className=\"m-post-card__wrapper\">\n    <View className=\"m-post-card__header\">\n      <Anchor href={url} title={title}>\n        <Image\n          className=\"m-post-card__image\"\n          source={image}\n          backgroundImage\n          resizeMode=\"cover\"\n        />\n      </Anchor>\n      <View className=\"m-post-card__label-holder\">\n        <PostLabel data={label} />\n      </View>\n    </View>\n    <View className=\"m-post-card__body\">\n      <Anchor href={url} title={title}>\n        <Text className=\"m-post-card__title\" tag=\"h2\">\n          {title}\n        </Text>\n      </Anchor>\n    </View>\n    <View className=\"m-post-card__footer\">\n      <View className=\"m-post-card__meta\">\n        <PostAuthorMeta data={author} />\n      </View>\n    </View>\n  </View>\n);\n\nPostCard.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string,\n  url: PropTypes.string,\n  author: PropTypes.object,\n  label: PropTypes.array\n};\n\nexport default PostCard;\n","/* eslint-disable import/no-cycle */\nimport { axios } from 'libraries';\n// eslint-disable-next-line import/no-cycle\n\nexport const apiInstance = axios.create({\n  baseURL: '',\n  timeout: 10000,\n  validateStatus: status => status >= 200 && status < 300\n});\n\nclass ApiRequest {\n  static get(route, token = false) {\n    return payload => this.request('GET', route, payload, token);\n  }\n\n  static put(route, token = false) {\n    return payload => this.request('PUT', route, payload, token);\n  }\n\n  static post(route, token = false) {\n    return payload => this.request('POST', route, payload, token);\n  }\n\n  static delete(route, token = false) {\n    return payload => this.request('DELETE', route, payload, token);\n  }\n\n  static patch(route, token = false) {\n    return payload => this.request('PATCH', route, payload, token);\n  }\n\n  static resolveParams(params) {\n    const paramsResult = [];\n    Object.keys(params).map(e => paramsResult.push(`${e}=${params[e]}`));\n    return paramsResult.join('&');\n  }\n\n  static request(method, route, payload = {}, token) {\n    return new Promise((resolve, reject) => {\n      const path = payload.path ? `/${payload.path}` : '';\n      const params = payload.params\n        ? `?${this.resolveParams(payload.params)}`\n        : '';\n      const customUrl = payload.url ? payload.url : '';\n      const baseHeaders = {\n        'Content-Type':\n          payload.type === 'form-data'\n            ? 'multipart/form-data'\n            : 'application/json'\n      };\n      apiInstance\n        .request({\n          url: customUrl.length > 0 ? customUrl : route + path + params,\n          method,\n          headers: payload.headers\n            ? { ...baseHeaders, ...payload.headers }\n            : baseHeaders,\n          data: payload.body ? payload.body : {}\n        })\n        .then(res => {\n          resolve(res);\n        })\n        .catch(err => {\n          if (err && err.response) {\n            reject(err.response);\n          } else if (err) {\n            reject(err);\n          }\n        });\n    });\n  }\n}\n\nexport default ApiRequest;\n","import { isLocalhost } from 'utils';\n\nconst development = {\n  url: {\n    api: 'https://www.googleapis.com/blogger/v3',\n    feed: 'https://nextcodepelajar.blogspot.com/feeds',\n    asset: 'https://nextcodepelajar.blogspot.com',\n    origin: 'https://nextcodepelajar.blogspot.com'\n  },\n  google: {\n    apiKey: 'AIzaSyB2MpzH-Gq6fnWuUnoI2PH2sPMTkGIQ9b0',\n    blogId: '5624631557745671504'\n  }\n};\n\nconst production = {\n  url: {\n    api: 'https://www.googleapis.com/blogger/v3',\n    feed: `${window.location.origin}/feeds`,\n    asset: window.location.origin,\n    origin: window.location.origin\n  },\n  google: {\n    apiKey: 'AIzaSyB2MpzH-Gq6fnWuUnoI2PH2sPMTkGIQ9b0',\n    // blogId: '3190947245348881579'\n    blogId: '5624631557745671504' \n  }\n};\n\nexport const config = isLocalhost ? development : production;\n\nconst baseUrl = {\n  summary: `${config.url.feed}/posts/summary`,\n  postFeed: `${config.url.feed}/posts/default`,\n  post: `${config.url.api}/blogs/${config.google.blogId}/posts`,\n  page: `${config.url.api}/blogs/${config.google.blogId}/pages`\n};\n\nexport default baseUrl;\n","import ApiRequest from './config';\nimport baseUrl from './url';\n\nconst API = {};\n\nAPI.blogPost = ApiRequest.get(baseUrl.post);\nAPI.blogSummary = ApiRequest.get(baseUrl.summary);\nAPI.blogPostFeed = ApiRequest.get(baseUrl.postFeed);\nAPI.blogPage = ApiRequest.get(baseUrl.page);\n\nexport default API;\n","import { API } from 'config';\nimport { config } from 'config/api/url';\nimport { mapFeedToFeatureData } from 'utils';\n\nconst isSuccess = (status = false) => {\n  if (status && status === 200) {\n    return true;\n  }\n  return status;\n};\n\nconst sendError = (error = {}, message = 'error response') =>\n  new Error({ message, error });\n\nconst postConfig = (option = {}) => ({\n  maxResults: 6,\n  orderBy: 'published',\n  key: config.google.apiKey,\n  fetchBodies: true,\n  fetchImages: true,\n  // view: 'READER',\n  ...option\n});\n\nconst featurePostConfig = (option = {}) => ({\n  alt: 'json',\n  'max-results': 1,\n  ...option\n});\n\n/**\n * GET FEATURED POST DATA\n */\nexport const callFeaturedPost = (payload = {}) => {\n  const sendPayload = {\n    ...payload,\n    params: {\n      alt: 'json',\n      'max-results': 1,\n      ...featurePostConfig(payload.params || {})\n    }\n  };\n  return API.blogSummary(sendPayload)\n    .then(res => {\n      if (isSuccess(res.status)) {\n        const { data } = res;\n        const featuredPostData = mapFeedToFeatureData(data);\n        return featuredPostData;\n      }\n      throw new Error(sendError(res));\n    })\n    .catch(err => {\n      console.log('TCL: callFeaturedPost -> err', err);\n      throw err;\n    });\n};\n\nexport const callPosts = (payload = {}) => {\n  const sendPayload = {\n    ...payload,\n    params: {\n      ...postConfig(payload.params || {})\n    }\n  };\n\n  return API.blogPost(sendPayload)\n    .then(res => {\n      if (isSuccess(res.status)) {\n        return res.data;\n      }\n\n      throw new Error(sendError(res));\n    })\n    .catch(err => {\n      console.log('TCL: callPosts -> err', err);\n      throw err;\n    });\n};\n","import { React } from 'libraries';\nimport { View, Text, Anchor, Image, Skeleton, Button } from 'components/atoms';\nimport { callFeaturedPost } from 'services';\nimport { isLocalhost } from 'utils';\n\nconst dummy = {\n  title: 'Dokumentasi Simpel Template Black Clover',\n  description:\n    'Selamat datang di postingan dokumentasi template yang saya buat dan bernama BLACK CLOVER. Berikut dokumentasinya:Cara Setting TemplatePemasangan- Buka Blogger.com- Pergi ke menu Tema- Lihat kiri atas ada tombol backup/pulihkan dan klik- Akan ada Modal popup, tekan tombol \"choose file\"- Pilih template ini- DoneKonfigurasi kelengkapan templateKonfigurasi sosial dan verifikasiCari SOSIAL AND ',\n  image:\n    'https://2.bp.blogspot.com/-_EVYfMGHtDU/W2Vd0vSfVRI/AAAAAAAABOk/NuOGcRH2eI4o5R9fNUN8dmXjrmcYwjSWQCPcBGAYYCw/w400-h400-c/2b31cd88f286a2c063c58aa2176fdc30.png',\n  url:\n    'https://nextcodepelajar.blogspot.com/2018/08/dokumentasi-simpel-template-black-clover.html'\n};\n\nclass FeatureBlock extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoaded: false,\n      title: '',\n      image: '',\n      description: '',\n      url: ''\n    };\n  }\n\n  componentDidMount() {\n    if (isLocalhost) return this.initDummy();\n    this.init();\n  }\n\n  initDummy = () => {\n    this.setState(\n      {\n        isLoading: true\n      },\n      () => {\n        setTimeout(() => {\n          this.setState({\n            ...dummy,\n            isLoading: false,\n            isLoaded: true\n          });\n        }, 3000);\n      }\n    );\n  };\n\n  init = async () => {\n    try {\n      await this.setState({ isLoading: true });\n      const data = await callFeaturedPost();\n      await this.setState({\n        ...data,\n        isLoading: false,\n        isLoaded: true\n      });\n    } catch (err) {\n      console.log('TCL: FeatureBlock -> init -> err', err);\n      this.setState({\n        isLoading: false\n      });\n    }\n  };\n\n  renderSkeleton = type => {\n    if (type === 'text') {\n      return (\n        <React.Fragment>\n          <Skeleton\n            style={{ width: '100%', paddingBottom: 40, marginBottom: 32 }}\n          />\n          <Skeleton\n            style={{ width: '60%', paddingBottom: 25, marginBottom: 14 }}\n          />\n          <Skeleton\n            style={{ width: '100%', paddingBottom: 25, marginBottom: 14 }}\n          />\n          <Skeleton\n            style={{ width: '80%', paddingBottom: 25, marginBottom: 14 }}\n          />\n          <Skeleton\n            style={{ width: '40%', paddingBottom: 25, marginBottom: 60 }}\n          />\n          <Skeleton\n            style={{ width: '40%', paddingBottom: 60, marginBottom: 14 }}\n          />\n        </React.Fragment>\n      );\n    }\n    if (type === 'image') {\n      return (\n        <Skeleton\n          style={{\n            width: '100%',\n            paddingBottom: '80%'\n          }}\n        />\n      );\n    }\n  };\n\n  render() {\n    const { title, description, image, url, isLoading, isLoaded } = this.state;\n    return (\n      <View className=\"o-feature-block__wrapper\">\n        <View className=\"o-feature-block__column\">\n          <View className=\"o-feature-block__inner\">\n            {isLoading && this.renderSkeleton('image')}\n            {isLoaded && (\n              <Image\n                className=\"o-feature-block__image\"\n                source={image}\n                backgroundImage\n                resizeMode=\"cover\"\n                title={title}\n                alt={title}\n              />\n            )}\n          </View>\n        </View>\n        <View className=\"o-feature-block__column\">\n          <View className=\"o-feature-block__inner o-feature-block__inner--text\">\n            {isLoading && this.renderSkeleton('text')}\n            {isLoaded && (\n              <React.Fragment>\n                <Anchor href={url} title={title}>\n                  <Text tag=\"h2\" className=\"o-feature-block__title\">\n                    {title}\n                  </Text>\n                </Anchor>\n                <Text\n                  className=\"o-feature-block__description\"\n                  style={{ marginBottom: 40 }}\n                >\n                  {description}\n                </Text>\n                <Button variant=\"primary\" anchor href={url} title={title}>\n                  Read More\n                </Button>\n              </React.Fragment>\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default FeatureBlock;\n","import { React } from 'libraries';\nimport _ from 'lodash';\nimport { View, Skeleton, Button } from 'components/atoms';\nimport { PostCard } from 'components/molecules';\nimport { callPosts } from 'services';\nimport { isLocalhost, createAuthor } from 'utils';\n\nconst dummy = {\n  title: 'Dokumentasi Simpel Template Black Clover',\n  description:\n    'Selamat datang di postingan dokumentasi template yang saya buat dan bernama BLACK CLOVER. Berikut dokumentasinya:Cara Setting TemplatePemasangan- Buka Blogger.com- Pergi ke menu Tema- Lihat kiri atas ada tombol backup/pulihkan dan klik- Akan ada Modal popup, tekan tombol \"choose file\"- Pilih template ini- DoneKonfigurasi kelengkapan templateKonfigurasi sosial dan verifikasiCari SOSIAL AND ',\n  image:\n    'https://1.bp.blogspot.com/-fSy9M-70Ozg/XMmtX14DsNI/AAAAAAAACio/EPS2DNWQ23weG7L_0diYUvpwgbhufmSogCLcBGAs/w315-h196-p-k-no-nu/grid%2Bposter%2B-1.png',\n  url:\n    'https://nextcodepelajar.blogspot.com/2018/08/dokumentasi-simpel-template-black-clover.html',\n  label: ['Tutorial', 'Website']\n};\n\nconst dummyAuthor = {\n  id: '08567324068406956261',\n  image:\n    'http://lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35',\n  name: 'Indrawan Lisanto',\n  url: 'https://www.blogger.com/profile/08567324068406956261'\n};\n\nclass FeatureBlock extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoaded: false,\n      nextToken: null,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { nextToken } = this.state;\n    if (prevState.nextToken && !nextToken) {\n      console.log('this ended');\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        isLoaded: true\n      });\n      return false;\n    }\n    return true;\n  }\n\n  init = async () => {\n    try {\n      const { nextToken, posts } = this.state;\n      const payload = {\n        params: {\n          pageToken: nextToken\n        }\n      };\n      await this.setState({ isLoading: true });\n      const response = nextToken ? await callPosts(payload) : await callPosts();\n      setTimeout(() => {\n        if (nextToken) {\n          return this.setState({\n            isLoading: false,\n            posts: [...posts, ..._.get(response, 'items', [])],\n            nextToken: _.get(response, 'nextPageToken', null)\n          });\n        }\n        return this.setState({\n          isLoading: false,\n          posts: _.get(response, 'items', []),\n          nextToken: _.get(response, 'nextPageToken', null)\n        });\n      }, 2000);\n    } catch (err) {\n      this.setState({\n        isLoading: false,\n        isLoaded: true\n      });\n    }\n  };\n\n  renderSkeleton = () =>\n    [1, 2, 3].map(value => (\n      <View key={value} className=\"o-post-block__column\">\n        <Skeleton\n          style={{\n            paddingBottom: '64%',\n            width: '100%',\n            marginBottom: 24\n          }}\n        />\n        <View\n          style={{\n            padding: 20\n          }}\n        >\n          <Skeleton\n            style={{\n              paddingBottom: 30,\n              width: '100%',\n              marginBottom: 15\n            }}\n          />\n          <Skeleton\n            style={{\n              paddingBottom: 20,\n              width: '80%',\n              marginBottom: 10\n            }}\n          />\n          <Skeleton\n            style={{\n              paddingBottom: 20,\n              width: '50%',\n              marginBottom: 0\n            }}\n          />\n        </View>\n        <View\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: 14,\n            paddingRight: 14\n          }}\n        >\n          <Skeleton\n            style={{\n              borderRadius: 30,\n              height: 30,\n              width: 30,\n              marginRight: 14\n            }}\n          />\n          <Skeleton\n            style={{\n              height: 15,\n              width: 100\n            }}\n          />\n        </View>\n      </View>\n    ));\n\n  render() {\n    const { posts, isLoading, isLoaded } = this.state;\n    return (\n      <View className=\"o-post-block__wrapper\">\n        <View className=\"o-post-block__row\">\n          {posts &&\n            posts.map((post, index) => (\n              <View key={index} className=\"o-post-block__column\">\n                <PostCard\n                  url={post.url}\n                  title={post.title}\n                  image={_.get(post, 'images[0].url', '')}\n                  author={createAuthor(post.author)}\n                  label={post.labels}\n                />\n              </View>\n            ))}\n          {isLoading && this.renderSkeleton()}\n        </View>\n        {!isLoaded && !isLoading && (\n          <View className=\"text-align-center\">\n            <Button onPress={this.init} variant=\"primary\">\n              Load More\n            </Button>\n          </View>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default FeatureBlock;\n","import { React } from 'libraries';\nimport { Section, Container, FeatureBlock } from 'components';\n\nclass FeaturePost extends React.Component {\n  render() {\n    return (\n      <Section style={{ paddingTop: 50, paddingBottom: 50 }} className=\"home-feature\">\n        <Container>\n          <FeatureBlock />\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default FeaturePost;\n","import { React } from 'libraries';\nimport { Section, Container, Button, PostBlock } from 'components';\n\nclass PostContainer extends React.Component {\n  render() {\n    return (\n      <Section\n        style={{ paddingTop: 50, paddingBottom: 50 }}\n        className=\"post-container\"\n      >\n        <PostBlock />\n      </Section>\n    );\n  }\n}\n\nexport default PostContainer;\n","import { elementId } from '../utils';\n\nconst elements = {\n  HOME_FEATURED_POST: elementId('HomeFeaturedPost'),\n  HOME_POST_CONTAINER: elementId('HomePostContainer')\n};\n\nexport default elements;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FeaturePost, PostContainer } from 'containers';\nimport elements from './elements';\n// import './index.css';\nimport './assets/scss/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst registerComponent = [\n  { component: FeaturePost , element: elements.HOME_FEATURED_POST },\n  { component: PostContainer , element: elements.HOME_POST_CONTAINER },\n]\n\nregisterComponent.forEach(app => {\n  const Component = app.component;\n  const el = app.element;\n  if(el) {\n    return ReactDOM.render(<Component />, el);\n  }\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}